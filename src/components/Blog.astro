---
import { getPageTranslations } from "@/i18n/i18n";
import { type Locale } from "@/i18n/config";
import { Calendar, Clock, ArrowRight } from "@lucide/astro";
import { cn } from "@/lib/utils";

export interface Props {
  locale: Locale;
  className?: string;
}

const { locale, className = "" } = Astro.props;

// Get translations for this component
const { t } = await getPageTranslations(locale, ["common"]);

// Sample blog posts - in a real app, these would come from a CMS or markdown files
const blogPosts = [
  {
    id: "modern-web-development",
    title: "Modern Web Development with Astro and React",
    excerpt:
      "Exploring the benefits of using Astro for building fast, content-focused websites with islands architecture.",
    date: "2024-01-15",
    readTime: 5,
    category: "Web Development",
    image: "/blog/astro-react.jpg",
    featured: true,
  },
  {
    id: "typescript-best-practices",
    title: "TypeScript Best Practices for Large Applications",
    excerpt:
      "Essential TypeScript patterns and practices for building maintainable and scalable applications.",
    date: "2024-01-08",
    readTime: 8,
    category: "TypeScript",
    image: "/blog/typescript.jpg",
    featured: false,
  },
  {
    id: "testing-strategies",
    title: "Comprehensive Testing Strategies with Cypress and Jest",
    excerpt:
      "A deep dive into testing methodologies combining unit tests with Jest and E2E tests with Cypress.",
    date: "2024-01-02",
    readTime: 6,
    category: "Testing",
    image: "/blog/testing.jpg",
    featured: false,
  },
];
---

<section id="blog" class={cn("py-20 bg-background", className)}>
  <div class="container-wide px-6">
    <div class="max-w-6xl mx-auto">
      <!-- Section Title -->
      <div class="text-center mb-16">
        <h2 class="text-4xl md:text-5xl font-bold text-foreground mb-6">
          {t("blog.title", {}, "Latest Blog Posts")}
        </h2>
        <p class="text-lg text-muted max-w-2xl mx-auto mb-6">
          {
            t(
              "blog.subtitle",
              {},
              "Thoughts and insights on web development, technology, and best practices"
            )
          }
        </p>
        <div class="w-24 h-1 mx-auto bg-brand-gradient"></div>
      </div>

      <!-- Posts  -->
      <div class="grid md:grid-cols-1 gap-8">
        {
          blogPosts.map((post) => (
            <article class="blog-card bg-muted rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 overflow-hidden group">
              <div class="p-6">
                <div class="flex items-center gap-4 text-sm text-muted mb-3">
                  <div class="flex items-center gap-1">
                    <Calendar class="w-3 h-3" />
                    <time datetime={post.date}>
                      {new Date(post.date).toLocaleDateString(
                        locale === "nl" ? "nl-NL" : "en-US",
                        {
                          year: "numeric",
                          month: "short",
                          day: "numeric",
                        }
                      )}
                    </time>
                  </div>
                  <div class="flex items-center gap-1">
                    <Clock class="w-3 h-3" />
                    <span>
                      {post.readTime} {t("blog.min_read", {}, "min read")}
                    </span>
                  </div>
                </div>

                <span class="text-accent text-sm font-medium mb-2 block">
                  {post.category}
                </span>

                <h3 class="text-xl font-bold text-foreground mb-3 group-hover:text-accent transition-colors">
                  {t(`blog.posts.${post.id}.title`, {}, post.title)}
                </h3>

                <p class="text-muted mb-4 leading-relaxed text-sm">
                  {t(`blog.posts.${post.id}.excerpt`, {}, post.excerpt)}
                </p>

                <a
                  href={`/blog/${post.id}`}
                  class="inline-flex items-center gap-2 text-accent hover:text-accent-hover font-medium transition-colors text-sm"
                >
                  {t("blog.read_more", {}, "Read More")}
                  <ArrowRight class="w-3 h-3 group-hover:translate-x-1 transition-transform" />
                </a>
              </div>
            </article>
          ))
        }
      </div>
    </div>
  </div>
</section>

<style>
  .blog-card {
    transform: translateY(0);
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
  }

  .blog-card:hover {
    transform: translateY(-4px);
  }

  .featured-post:hover {
    transform: translateY(-2px);
  }

  /* Colors now come from CSS variables; no dark overrides needed */
</style>
