---
import IntlBaseLayout from "@/layouts/IntlBaseLayout.astro";
import { getPageTranslations, getLocaleStaticPaths } from "@/i18n/i18n";
import { locales, type Locale } from "@/i18n/config";
import { getCollection } from "astro:content";

// Generate static paths for all locales
export async function getStaticPaths() {
  return getLocaleStaticPaths();
}
const { locale } = Astro.params;

// Get blog entries for this locale
let blogEntries: any[] = [];
let collectionName = `blog-${locale}` as any;

try {
  blogEntries = await getCollection(collectionName);
} catch (error) {
  console.error(`Failed to load ${collectionName}:`, error);
}

// Get the translation function for this page
const { t } = await getPageTranslations(locale as Locale, ["common", "ui"]);
---

<IntlBaseLayout locale={locale}>
  <div class="max-w-4xl mx-auto px-4 py-12">
    <h1 class="text-4xl font-bold mb-8">
      {t("nav.blog")} - {locale.toUpperCase()}
    </h1>

    <div class="mb-8">
      <p>{t("blog.collection_info")} <code>{collectionName}</code></p>
      <p>{t("blog.found_entries", { count: blogEntries.length })}</p>
    </div>

    {
      blogEntries.length > 0 ? (
        <div class="grid gap-6">
          {blogEntries.map((entry: any) => (
            <article class="border border-gray-200 dark:border-gray-700 rounded-lg p-6">
              <h2 class="text-2xl font-semibold mb-4">
                <a
                  href={`/${locale}/blog/${entry.id}`}
                  class="text-blue-600 hover:text-blue-800 dark:text-blue-400"
                >
                  {entry.data?.title || t("blog.no_title")}
                </a>
              </h2>

              <p class="text-gray-600 dark:text-gray-300 mb-4">
                {entry.data?.excerpt || t("blog.no_excerpt")}
              </p>

              <div class="flex items-center gap-4 text-sm text-gray-500">
                <span>{entry.data?.date || t("blog.no_date")}</span>
                <span>
                  {entry.data?.readTime || 0} {t("blog.minutesRead")}
                </span>
                <span>{entry.data?.category || t("blog.no_category")}</span>
              </div>

              <div class="mt-4 text-xs text-gray-400">
                <details>
                  <summary>{t("blog.debug_info")}</summary>
                  <pre class="mt-2 text-xs overflow-auto">
                    {JSON.stringify(entry, null, 2)}
                  </pre>
                </details>
              </div>
            </article>
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <p class="text-gray-500">{t("blog.no_posts_found", { locale })}</p>
          <p class="text-sm text-gray-400 mt-2">
            {t("blog.check_content_folder")}{" "}
            <code>src/content/{locale}/blog/</code>
          </p>
        </div>
      )
    }
  </div>
</IntlBaseLayout>
